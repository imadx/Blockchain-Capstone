// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract("TestSquareVerifier", (accounts) => {
  const Proof = require("../../zokrates/code/square/proof");
  let contract = null;

  before(async function () {
    contract = await Verifier.new({ from: accounts[0] });
  });

  it("should return true for correct proof", async () => {
    const result = await contract.verifyTx.call(Proof.proof, Proof.inputs);
    expect(result).to.equal(true);
  });

  it("should return false for invalid proof", async () => {
    const result = await contract.verifyTx.call(Proof.proof, [
      "0x0000000000000000000000000000000000000000000000000000000000000003",
      "0x0000000000000000000000000000000000000000000000000000000000000001",
    ]);
    expect(result).to.equal(false);
  });
});
